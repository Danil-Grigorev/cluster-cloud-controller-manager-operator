apiVersion: v1
kind: Pod
metadata:
  name: azure-cloud-controller-manager
  namespace: kube-system
spec:
  priorityClassName: system-node-critical
  hostNetwork: true
  containers:
    - name: cloud-controller-manager
      image: quay.io/openshift/origin-azure-cloud-controller-manager
      imagePullPolicy: IfNotPresent
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        else
          URL_ONLY_KUBECONFIG=/etc/kubernetes/kubeconfig
        fi
        exec cloud-controller-manager
      args:
        - --cloud-provider=azure
        - --controllers=cloud-node # run cloud-node controller only for Node initialization
        - --kubeconfig=/etc/kubernetes/bootstrap-secrets/kubeconfig
        - --cloud-config=/etc/kubernetes/bootstrap-configs/cloud.conf
        - --leader-elect=false
        - --port=10267
        - -v=2
      livenessProbe:
        httpGet:
          path: /healthz
          port: 10267
        initialDelaySeconds: 20
        periodSeconds: 10
        timeoutSeconds: 5
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: host-etc-kube
        readOnly: true
  tolerations:
  - effect: NoSchedule
    key: node.cloudprovider.kubernetes.io/uninitialized
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/not-ready
    operator: Exists
  volumes:
  - name: host-etc-kube
    hostPath:
      path: /etc/kubernetes
      type: Directory
